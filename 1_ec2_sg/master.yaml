Description: >
  This template deploys a VPC and a bastion
Parameters:
  railsenv:
    Description: Rails ENV Version
    Type: String
    Default: production
  masterkey:
    Description: Master Key Name
    Type: String
    Default: jdf
Conditions:
  Staging: !Equals [ !Ref railsenv, "staging" ]
  NotStaging: !Not [ !Equals [ !Ref railsenv, "staging" ] ]
Mappings:
  HOST:
    jdf-staging:
      BaseURL: https://staging-cloudformation-jdf.s3-us-west-1.amazonaws.com
    jdf-production:
      BaseURL: https://staging-cloudformation-jdf.s3-us-west-1.amazonaws.com
    staging:
      BaseURL: https://staging-cloudformation-jdf-cgx.s3-us-west-1.amazonaws.com
    production:
      BaseURL: https://staging-cloudformation-jdf-cgx.s3-us-west-1.amazonaws.com
Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join ["/", [ !FindInMap [HOST, !Ref railsenv, BaseURL], "infrastructure/vpc.yaml" ] ]
      Parameters:
        EnvironmentName:    !Ref AWS::StackName
        VpcCIDR:            10.180.0.0/16
        PublicSubnet1CIDR:  10.180.8.0/21
        PublicSubnet2CIDR:  10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21
  Bastion:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Join ["/", [ !FindInMap [HOST, !Ref railsenv, BaseURL], "infrastructure/bastion.yaml" ] ]
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        MasterKey: !Ref masterkey
        VPC: !GetAtt VPC.Outputs.VPC
        InstanceType: t2.micro
        Subnets: !Join [ ",", [ !GetAtt VPC.Outputs.PublicSubnet1 ]]
        RailsEnv: !Ref railsenv