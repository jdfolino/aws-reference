Description: >
    This template deploys an Bastion host to the provided VPC and subnets

Parameters:
  EnvironmentName:
      Description: An environment name that will be prefixed to resource names
      Type: String

  InstanceType:
      Description: Which instance type should we use to build the ECS cluster?
      Type: String
      Default: t2.micro

  VPC:
      Description: Choose which VPC this ECS cluster should be deployed to
      Type: AWS::EC2::VPC::Id

  Subnets:
      Description: Choose which subnets this ECS cluster should be deployed to
      Type: List<AWS::EC2::Subnet::Id>

  SecurityGroups:
      Description: Select the Security Group to use for access to the bastion
      Type: List<AWS::EC2::SecurityGroup::Id>

  MasterKey:
    Description: Select the Security Group to use for access to the bastion
    Type: String

  RailsEnv:
    Type: String
    Default: staging
Mappings:
    AWSRegionToAMI:
        us-west-1:
            AMI: ami-015954d5e5548d13b
        us-west-2:
            AMI: ami-09b42976632b27e9b
Conditions:
  Staging: !Equals [!Ref RailsEnv, "staging"]
Resources:
    InstanceProfile:
        Type: AWS::IAM::InstanceProfile
        Properties:
          Path: '/'
          Roles:
            - !Ref IAMRole

    IAMRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal:
              Service:
              - 'ec2.amazonaws.com'
            Action:
            - 'sts:AssumeRole'
        Policies:
        - PolicyName: logs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:PutLogEvents'
              - 'logs:DescribeLogStreams'
              Resource:
              - 'arn:aws:logs:*:*:*'

    EC2Instance:
      Type: AWS::EC2::Instance
      Properties:
          KeyName: !Ref MasterKey
          AssociatePublicIpAddress: true
          EbsOptimized: false
          IamInstanceProfile: !Ref InstanceProfile
          ImageId: !FindInMap [AWSRegionToAMI, !Ref 'AWS::Region', AMI]
          InstanceType: !Ref InstanceType
          SecurityGroups: !Ref SecurityGroups
          UserData:
            'Fn::Base64': !Sub |
              #!/bin/bash -x
              echo hello