Description: >
    This template contains the security groups required by our entire stack.
    We create them in a seperate nested template, so they can be referenced
    by all of the other nested templates.

Parameters:
  OfficeIp:
    Description: IP address of the office
    Type: String
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the security groups should be deployed to
  RailsEnv:
    Type: String
    Description: Rails Environment
    Default: staging

Conditions:
  Internetable: !Equals [ !Ref RailsEnv, "production" ]

Resources:
  # This security group defines who/where is allowed to access the ECS hosts directly.
  # By default we're just allowing access from the load balancer.  If you want to SSH
  # into the hosts, or expose non-load balanced services you can open their ports here.
  PermittedAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the instances/ports from outisde world
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-Outside-Permitted-Access


  BastionAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Access to the Bastion via SSH
      SecurityGroupIngress:
      # Allow access to 22/tcp from the Melbourne office group, consider open?
      - CidrIp: !Join [ "/", [ !Ref OfficeIp, "32"] ]
        IpProtocol: tcp
        FromPort: 22
        ToPort: 22
      - CidrIp: "10.180.0.0/16"
        IpProtocol: tcp
        FromPort: 22
        ToPort: 22
      Tags:
      - Key: Name
        Value: !Sub ${EnvironmentName}-BastionAccess


Outputs:

    BastionAccessSecurityGroup:
        Description: A reference to the security group for bastion access
        Value: !Ref BastionAccessSecurityGroup
    PermittedAccessSecurityGroup:
        Description: A reference for permitted accesses
        Value: !Ref PermittedAccessSecurityGroup
