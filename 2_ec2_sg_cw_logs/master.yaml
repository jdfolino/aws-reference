AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create
  an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based
  on the region in which the stack is run. This example creates an EC2 security
  group for the instance to give you SSH access. **WARNING** This template
  creates an Amazon EC2 instance. You will be billed for the AWS resources used
  if you create a stack from this template.
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles:
      - !Ref IAMRole

  IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - 'ec2.amazonaws.com'
          Action:
          - 'sts:AssumeRole'
      Path: '/'
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'logs:CreateLogGroup'
            - 'logs:CreateLogStream'
            - 'logs:PutLogEvents'
            - 'logs:DescribeLogStreams'
            Resource:
            - 'arn:aws:logs:*:*:*'

  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
          - [config]
          config:
            packages:
              yum:
                awslogs: []
            files:
              '/etc/awslogs/awscli.conf':
                content: !Sub |
                  [default]
                  region = ${AWS::Region}
                  [plugins]
                  cwlogs = cwlogs
                mode: '000644'
                owner: root
                group: root
              '/etc/awslogs/awslogs.conf':
                content: !Sub |
                  [general]
                  state_file = /var/lib/awslogs/agent-state
                  [/var/log/messages]
                  datetime_format = %b %d %H:%M:%S
                  file = /var/log/messages
                  log_stream_name = {instance_id}/var/log/messages
                  log_group_name = bastion_logs
                mode: '000644'
                owner: root
                group: root
    Properties:
      ImageId: ami-015954d5e5548d13b
      InstanceType: t2.micro
      SecurityGroups:
      - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref InstanceProfile
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -x

          groupadd -f sudo
          sudo su - root -c 'echo "%sudo   ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers'
          retVal=$?
          if [ $retVal -ne 0 ]; then
              logger "ERROR: Failed to set up /etc/sudoers"
          else
              logger "INFO: /etc/sudoers setup successfully"
          fi

          sudo systemctl start awslogsd
          retVal=$?
          if [ $retVal -ne 0 ]; then
              logger "ERROR: Failed to start awslogsd"
          else
              logger "INFO: Started awslogsd"
          fi

  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access via port 22
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref SSHLocation

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref EC2Instance
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt
    - EC2Instance
    - AvailabilityZone
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt
    - EC2Instance
    - PublicDnsName
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt
    - EC2Instance
    - PublicIp
